<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
    http://www.springframework.org/schema/tx   
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
    http://www.springframework.org/schema/context  
    http://www.springframework.org/schema/context/spring-context-3.0.xsd  
    http://www.springframework.org/schema/mvc  
    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<bean id="car0" class="com.smart.bean.Car">
		<property name="color" value="红色"></property>
	</bean>
	
	<bean id="car1" class="com.smart.bean.Car">
		<constructor-arg type="java.lang.String"><value>蓝色</value></constructor-arg>
	</bean>
	
	<bean id="car2" class="com.smart.bean.Car">
		<constructor-arg index="0" value="紫色"></constructor-arg>
	</bean>
	
	<!-- 循环依赖示例 -->
	<bean id="car3" class="com.smart.bean.Car">
		<constructor-arg index="0" ref="boss"></constructor-arg>
		<constructor-arg index="1" value="大众"></constructor-arg>
	</bean>
	
	<bean id="boss" class="com.smart.bean.Boss">
		<constructor-arg index="0" value="louys"></constructor-arg>
		<constructor-arg index="1" ref="car3"></constructor-arg>
	</bean>
	
	<bean id="boss2" class="com.smart.bean.Boss">
		<property name="favorites">
			<map>
				<entry>
					<key><value>first</value></key>
					<value>读书</value>
				</entry>
				<entry>
					<key><value>second</value></key>
					<value>看电影</value>
				</entry>
			</map>
		</property>
		<property name="properties">
			<props>
				<prop key="jobMail">jobMail@136.com</prop>
				<prop key="lifeMail">lifeMail@136.com</prop>
			</props>
		</property>
	</bean>
	
	<!-- 非静态工厂方法创建bean -->
	<bean id="carFactory" class="com.smart.factory.CarFactory"></bean>
	<bean id="car5" factory-bean="carFactory" factory-method="createBugattiCar"></bean>
	<!-- 静态工厂方法创建bean -->
	<bean id="car6" class="com.smart.factory.CarFactory" factory-method="createVWCar"></bean>
	
	<!-- MagicBoss prototype类型的bean-->
	<bean id="car" class="com.smart.injectfun.Car" scope="prototype">
		<property name="brand" value="红旗"></property>
	</bean>
	<!-- 实施方法注入 -->
	<bean id="magicBoss" class="com.smart.injectfun.MagicBoss">
		<lookup-method name="getCar" bean="car"/>
	</bean>
	<!-- 属性编辑器 -->
	<bean class="org.springframework.beans.factory.config.CustomEditorConfigurer">
		<property name="customEditors">
			<map>
				<entry key="com.smart.bean.Car" value="com.smart.bean.editor.CarEditor"></entry>
			</map>
		</property>
	</bean>
	<bean id="boss3" class="com.smart.bean.Boss">
		<property name="car" value="红旗,red,200"></property>
	</bean>
</beans> 
